"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/wallets/near-wallet.js":
/*!************************************!*\
  !*** ./src/wallets/near-wallet.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Wallet: function() { return /* binding */ Wallet; }\n/* harmony export */ });\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! near-api-js */ \"./node_modules/near-api-js/lib/browser-index.js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(near_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _barrel_optimize_names_distinctUntilChanged_map_rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=distinctUntilChanged,map!=!rxjs */ \"__barrel_optimize__?names=distinctUntilChanged,map!=!./node_modules/rxjs/dist/esm5/index.js\");\n/* harmony import */ var _near_wallet_selector_modal_ui_styles_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @near-wallet-selector/modal-ui/styles.css */ \"./node_modules/@near-wallet-selector/modal-ui/styles.css\");\n/* harmony import */ var _near_wallet_selector_modal_ui_styles_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_near_wallet_selector_modal_ui_styles_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _near_wallet_selector_modal_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @near-wallet-selector/modal-ui */ \"./node_modules/@near-wallet-selector/modal-ui/index.js\");\n/* harmony import */ var _near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @near-wallet-selector/core */ \"./node_modules/@near-wallet-selector/core/index.js\");\n/* harmony import */ var _near_wallet_selector_here_wallet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @near-wallet-selector/here-wallet */ \"./node_modules/@near-wallet-selector/here-wallet/index.js\");\n/* harmony import */ var _near_wallet_selector_my_near_wallet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @near-wallet-selector/my-near-wallet */ \"./node_modules/@near-wallet-selector/my-near-wallet/index.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n// near api js\n\n// wallet selector\n\n\n\n\n\n\nconst THIRTY_TGAS = \"30000000000000\";\nconst NO_DEPOSIT = \"0\";\nclass Wallet {\n    /**\n   * @constructor\n   * @param {string} networkId - the network id to connect to\n   * @param {string} createAccessKeyFor - the contract to create an access key for\n   * @example\n   * const wallet = new Wallet({ networkId: 'testnet', createAccessKeyFor: 'contractId' });\n   * wallet.startUp((signedAccountId) => console.log(signedAccountId));\n   */ constructor({ networkId = \"testnet\", createAccessKeyFor = undefined }){\n        /**\n   * To be called when the website loads\n   * @param {Function} accountChangeHook - a function that is called when the user signs in or out#\n   * @returns {Promise<string>} - the accountId of the signed-in user \n   */ this.startUp = async (accountChangeHook)=>{\n            const walletSelector = await this.selector;\n            const isSignedIn = walletSelector.isSignedIn();\n            if (isSignedIn) {\n                this.accountId = walletSelector.store.getState().accounts[0].accountId;\n                this.selectedWallet = await walletSelector.wallet();\n            }\n            walletSelector.store.observable.pipe((0,_barrel_optimize_names_distinctUntilChanged_map_rxjs__WEBPACK_IMPORTED_MODULE_6__.map)((state)=>state.accounts), (0,_barrel_optimize_names_distinctUntilChanged_map_rxjs__WEBPACK_IMPORTED_MODULE_6__.distinctUntilChanged)()).subscribe((accounts)=>{\n                var _accounts_find;\n                const signedAccount = (_accounts_find = accounts.find((account)=>account.active)) === null || _accounts_find === void 0 ? void 0 : _accounts_find.accountId;\n                accountChangeHook(signedAccount);\n            });\n            return this.accountId;\n        };\n        /**\n   * Displays a modal to login the user\n   */ this.signIn = async ()=>{\n            const modal = (0,_near_wallet_selector_modal_ui__WEBPACK_IMPORTED_MODULE_2__.setupModal)(await this.selector, {\n                contractId: this.createAccessKeyFor\n            });\n            modal.show();\n        };\n        /**\n   * Logout the user\n   */ this.signOut = async ()=>{\n            await this.selectedWallet.signOut();\n            this.selectedWallet = this.accountId = this.createAccessKeyFor = null;\n        };\n        /**\n   * Makes a read-only call to a contract\n   * @param {string} contractId - the contract's account id\n   * @param {string} method - the method to call\n   * @param {Object} args - the arguments to pass to the method\n   * @returns {Promise<JSON.value>} - the result of the method call\n   */ this.viewMethod = async (param)=>{\n            let { contractId, method, args = {} } = param;\n            const walletSelector = await this.selector;\n            const { network } = walletSelector.options;\n            const provider = new near_api_js__WEBPACK_IMPORTED_MODULE_0__.providers.JsonRpcProvider({\n                url: network.nodeUrl\n            });\n            let res = await provider.query({\n                request_type: \"call_function\",\n                account_id: contractId,\n                method_name: method,\n                args_base64: Buffer.from(JSON.stringify(args)).toString(\"base64\"),\n                finality: \"optimistic\"\n            });\n            return JSON.parse(Buffer.from(res.result).toString());\n        };\n        /**\n   * Makes a call to a contract\n   * @param {string} contractId - the contract's account id\n   * @param {string} method - the method to call\n   * @param {Object} args - the arguments to pass to the method\n   * @param {string} gas - the amount of gas to use\n   * @param {string} deposit - the amount of yoctoNEAR to deposit\n   * @returns {Promise<Transaction>} - the resulting transaction\n   */ this.callMethod = async (param)=>{\n            let { contractId, method, args = {}, gas = THIRTY_TGAS, deposit = NO_DEPOSIT } = param;\n            return await this.selectedWallet.signAndSendTransaction({\n                signerId: this.accountId,\n                receiverId: contractId,\n                actions: [\n                    {\n                        type: \"FunctionCall\",\n                        params: {\n                            methodName: method,\n                            args,\n                            gas,\n                            deposit\n                        }\n                    }\n                ]\n            });\n        };\n        /**\n   * Makes a call to a contract\n   * @param {string} txhash \n   * @returns {Promise<JSON.value>} \n   */ this.getTransactionResult = async (txhash)=>{\n            const walletSelector = await this.selector;\n            const { network } = walletSelector.options;\n            const provider = new near_api_js__WEBPACK_IMPORTED_MODULE_0__.providers.JsonRpcProvider({\n                url: network.nodeUrl\n            });\n            const transaction = await provider.txStatus(txhash, \"unnused\");\n            return near_api_js__WEBPACK_IMPORTED_MODULE_0__.providers.getTransactionLastResult(transaction);\n        };\n        this.accountId = \"\";\n        this.createAccessKeyFor = createAccessKeyFor;\n        this.selector = (0,_near_wallet_selector_core__WEBPACK_IMPORTED_MODULE_3__.setupWalletSelector)({\n            network: networkId,\n            modules: [\n                (0,_near_wallet_selector_my_near_wallet__WEBPACK_IMPORTED_MODULE_5__.setupMyNearWallet)(),\n                (0,_near_wallet_selector_here_wallet__WEBPACK_IMPORTED_MODULE_4__.setupHereWallet)()\n            ]\n        });\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/wallets/near-wallet.js\n"));

/***/ })

});